/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-10-01 07:17:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.missing;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class registermissinglist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <title>찾습니다</title>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("	.fileContent {\r\n");
      out.write("		border : 1px dotted blue;\r\n");
      out.write("		height : 100px;	\r\n");
      out.write("		display : none;	\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("	$(function() {\r\n");
      out.write("		$(\".fileDrop\").on(\"dropenter dragover\", function(e) {\r\n");
      out.write("			e.preventDefault();\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		$(\".fileDrop\").on(\"drop\", function(e) {\r\n");
      out.write("			e.preventDefault(); // drop된 파일이 chrome브라우저에서 열리는 이벤트 전파를 막음\r\n");
      out.write("			\r\n");
      out.write("			let files = e.originalEvent.dataTransfer.files; // 드래그 된 파일을 얻어옴\r\n");
      out.write("			console.log(files);\r\n");
      out.write("			\r\n");
      out.write("			// 게시글 등록 전 이미지 파일 먼저 업로드\r\n");
      out.write("			let formData = new FormData(); // form 객체 생성\r\n");
      out.write("			formData.append(\"upFile\", files); // form 객체에 파일 첨부\r\n");
      out.write("\r\n");
      out.write("			let url = '/missing/uploadImgs';\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : url, // ajax와 통신 할 곳\r\n");
      out.write("				data : formData, // 서블릿에 보낼 데이터\r\n");
      out.write("				dataType : \"text\", // 수신될 데이터의 타입\r\n");
      out.write("				type : \"post\", // 통신 방식\r\n");
      out.write("				processData : false, // 전송하는 데이터를 쿼리 스트링 형태로 반환하는지를 결정(파일은 길이가 길기 때문에 url길이 초과됨)\r\n");
      out.write("				contentType : false, // encType의 기본값 (application/x-www-form-urlencoded) multipart/form-data 쓸거니까 false\r\n");
      out.write("				success : function(data) { // 통신 성공시 수행될 콜백 함수\r\n");
      out.write("					// console.log(data);\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	\r\n");
      out.write("	function showDropDiv() {\r\n");
      out.write("		$(\".fileContent\").show();\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("  <hr />\r\n");
      out.write("  <h2>글 등록</h2>\r\n");
      out.write("  <form class=\"form-horizontal\" action=\"/action_page.php\">\r\n");
      out.write("  	 <div class=\"form-group\">\r\n");
      out.write("      <label class=\"control-label col-sm-2\" for=\"category\">카테고리:</label>\r\n");
      out.write("      <div class=\"col-sm-10\">\r\n");
      out.write("        <select id=\"category\" name=\"category\">\r\n");
      out.write("        	<option value=\"missing\">찾습니다</option>\r\n");
      out.write("        	<option value=\"found\">찾았어요</option>\r\n");
      out.write("        </select>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-group\">\r\n");
      out.write("      <label class=\"control-label col-sm-2\" for=\"title\">제목:</label>\r\n");
      out.write("      <div class=\"col-sm-10\">\r\n");
      out.write("        <input type=\"text\" class=\"form-control\" id=\"title\" name=\"title\">\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-group\">\r\n");
      out.write("      <label class=\"control-label col-sm-2\" for=\"writer\">작성자:</label>\r\n");
      out.write("      <div class=\"col-sm-10\">          \r\n");
      out.write("        <input type=\"text\" class=\"form-control\" id=\"writer\" name=\"writer\" readonly>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-group\">\r\n");
      out.write("      <label class=\"control-label col-sm-2\" for=\"password\">수정/삭제 비밀번호:</label>\r\n");
      out.write("      <div class=\"col-sm-10\">          \r\n");
      out.write("        <input type=\"text\" class=\"form-control\" id=\"password\" name=\"password\">\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-group\">\r\n");
      out.write("      <label class=\"control-label col-sm-2\" for=\"location\">실종 지역:</label>\r\n");
      out.write("      <div class=\"col-sm-10\">          \r\n");
      out.write("      	<select id=\"location\" name=\"location\">\r\n");
      out.write("        	<option value=\"Seoul\">서울</option>\r\n");
      out.write("        	<option value=\"Gyeonggi\">경기</option>\r\n");
      out.write("        	<option value=\"Incheon\">인천</option>\r\n");
      out.write("        	<option value=\"Gangwon\">강원</option>\r\n");
      out.write("        	<option value=\"Chungnam\">충남</option>\r\n");
      out.write("        	<option value=\"Daejeon\">대전</option>\r\n");
      out.write("        	<option value=\"Chungbuk\">충북</option>\r\n");
      out.write("        	<option value=\"Sejong\">세종</option>\r\n");
      out.write("        	<option value=\"Busan\">부산</option>\r\n");
      out.write("        	<option value=\"Ulsan\">울산</option>\r\n");
      out.write("        	<option value=\"Daegu\">대구</option>\r\n");
      out.write("        	<option value=\"Gyeongbuk\">경북</option>\r\n");
      out.write("        	<option value=\"Gyeongnam\">경남</option>\r\n");
      out.write("        	<option value=\"Jeonnam\">전남</option>\r\n");
      out.write("        	<option value=\"Gwangju\">광주</option>\r\n");
      out.write("        	<option value=\"Jeonbuk\">전북</option>\r\n");
      out.write("        	<option value=\"Jeju\">제주</option>\r\n");
      out.write("        </select>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-group\">\r\n");
      out.write("      <label class=\"control-label col-sm-2\" for=\"phone\">연락처:</label>\r\n");
      out.write("      <div class=\"col-sm-10\">          \r\n");
      out.write("        <input type=\"text\" class=\"form-control\" id=\"phone\" name=\"phone\">\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-group\">\r\n");
      out.write("      <label class=\"control-label col-sm-2\" for=\"contents\">본문:</label>\r\n");
      out.write("      <div class=\"col-sm-10\">          \r\n");
      out.write("        <input type=\"text\" class=\"form-control\" id=\"contents\" name=\"contents\" style=\"width:100%;height:400px;\">\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-group\">\r\n");
      out.write("    	<label class=\"control-label col-sm-2\" for=\"contents\">사진:</label>\r\n");
      out.write("    	<div class=\"col-sm-10\">  \r\n");
      out.write("	    	<button type=\"button\" class=\"btn btn-default\" onclick=\"showDropDiv();\">파일 업로드</button>\r\n");
      out.write("			<div class=\"fileDrop\">\r\n");
      out.write("				<div class=\"fileContent\">이 영역에 업로드 할 파일을 드래그 드롭 해주세요!</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"fDropList\"></div>\r\n");
      out.write("		</div>\r\n");
      out.write("        <input type=\"hidden\" name=\"thumbimage\" id=\"upfileNameThumb\" />\r\n");
      out.write("        <input type=\"hidden\" name=\"image\" id=\"upfileNameOrigin\" />\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"form-group\">        \r\n");
      out.write("      <div class=\"col-sm-offset-2 col-sm-10\">\r\n");
      out.write("        <button type=\"submit\" class=\"btn btn-primary\">등록</button>\r\n");
      out.write("        <button type=\"reset\" class=\"btn btn-default\">취소</button>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
