/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.69
 * Generated at: 2021-10-10 05:56:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.missing;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class viewBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/lecture/final/dodam/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/dodam/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1631675128238L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>실종 : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</title>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("		$(function() {\r\n");
      out.write("			let imgAr = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.img}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\".split(\", \");\r\n");
      out.write("			console.log(imgAr);\r\n");
      out.write("			let output = \"\";\r\n");
      out.write("			\r\n");
      out.write("			// or 슬릭으로 해보던지??\r\n");
      out.write("			\r\n");
      out.write("			let imgCnt = 0;\r\n");
      out.write("			for (let i=0; i<imgAr.length; i++) {\r\n");
      out.write("				if (imgAr[i] != \"\") {\r\n");
      out.write("					if (imgAr[i].split(\":\")[0] == \"http\") {\r\n");
      out.write("						output += \"<img src='\" + imgAr[i] + \"' width='30%'/>\";\r\n");
      out.write("					} else {\r\n");
      out.write("						output += \"<img src='../resources/uploads\" + imgAr[i] + \"' width='30%'/>\";\r\n");
      out.write("					}\r\n");
      out.write("					imgCnt++;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			for (let i=0; i<3-imgCnt; i++) {\r\n");
      out.write("				output += \"<img src='../resources/images/missing/noimage.png' width='30%' />\";\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			console.log(output);\r\n");
      out.write("			$(\".img_container\").html(output);\r\n");
      out.write("			\r\n");
      out.write("			let animal = process_animal();\r\n");
      out.write("			let missingdate = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.missingdate }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\".split(\" \")[0];\r\n");
      out.write("			let registerdate = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.registerdate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\".substring(0,\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.registerdate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\".lastIndexOf(\":\"));\r\n");
      out.write("			let gender = process_gender();\r\n");
      out.write("			\r\n");
      out.write("			$(\"#registerdate\").html(registerdate);\r\n");
      out.write("			$(\"#missingdate\").html(missingdate);	\r\n");
      out.write("			$(\"#animal_breed\").html(animal);\r\n");
      out.write("			$(\"#gender\").html(gender);\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		function process_animal() {\r\n");
      out.write("			let animal = \"\";\r\n");
      out.write("			if (\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.animal }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" == \"dog\") {\r\n");
      out.write("				animal = \"개\";\r\n");
      out.write("			} else if (\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.animal }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" == \"cat\") {\r\n");
      out.write("				animal = \"고양이\";\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			return animal;\r\n");
      out.write("		}\r\n");
      out.write("			\r\n");
      out.write("		function process_gender() {\r\n");
      out.write("			let gender = \"\";\r\n");
      out.write("			if (\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.gender }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" == 'M') {\r\n");
      out.write("				gender = \"수컷\";\r\n");
      out.write("			} else if (\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.gender }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" == 'F') {\r\n");
      out.write("				gender = \"암컷\";\r\n");
      out.write("			} else if (\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.gender }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" == 'N') {\r\n");
      out.write("				gender = \"성별 모름\";\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("			return gender;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function deleteBoard() {\r\n");
      out.write("			let url = '/missing/remove';\r\n");
      out.write("			let no = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.no }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : url, // ajax와 통신 할 곳\r\n");
      out.write("				data : {no : no}, // 서블릿에 보낼 데이터\r\n");
      out.write("				dataType : \"text\", // 수신될 데이터의 타입\r\n");
      out.write("				type : \"POST\", // 통신 방식\r\n");
      out.write("				success : function(data) { // 통신 성공시 수행될 콜백 함수\r\n");
      out.write("					console.log(data);\r\n");
      out.write("					if(data == \"success\") {\r\n");
      out.write("						alert(\"게시물을 삭제하였습니다!\");\r\n");
      out.write("						location.href=\"/missing/list\";\r\n");
      out.write("					} else {\r\n");
      out.write("						alert(\"게시물을 삭제하는데에 실패하였습니다!\");\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function showReply() {\r\n");
      out.write("			$(\"#replyDiv\").show(500);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function chageToFound() {\r\n");
      out.write("			let no = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("			console.log(no);\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("	<style>\r\n");
      out.write("		h1 {\r\n");
      out.write("			font-size: 48px;\r\n");
      out.write("		}\r\n");
      out.write("	\r\n");
      out.write("		.img_container {\r\n");
      out.write("			display : block;\r\n");
      out.write("			margin : 30px 0;\r\n");
      out.write("			text-align: center;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.info_index {\r\n");
      out.write("			width : 15%;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		table {\r\n");
      out.write("			font-size: 14px;\r\n");
      out.write("			width: 100%;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.table {\r\n");
      out.write("			font-size: 16px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.wrap {\r\n");
      out.write("			width: 90%;\r\n");
      out.write("			margin: auto;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.add_border {\r\n");
      out.write("			border-top: 2px solid #666666;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		.img_tr {\r\n");
      out.write("			border-top: 1px solid #d9d9d9;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		#replyDiv {\r\n");
      out.write("			boarder : 1px dotted #e1bee7;\r\n");
      out.write("			display : none;\r\n");
      out.write("			padding : 5px;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		textarea {\r\n");
      out.write("			width: 80%;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		#like {\r\n");
      out.write("			width: 20px;\r\n");
      out.write("			margin-bottom: 2px;\r\n");
      out.write("			cursor: pointer;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		#foundBtn {\r\n");
      out.write("			background-color: #ff7f00;\r\n");
      out.write("			width: 90px;\r\n");
      out.write("			height: 30px;\r\n");
      out.write("			border-radius: 4px;\r\n");
      out.write("			font-size: 16px;\r\n");
      out.write("			text-align: center;\r\n");
      out.write("			display: table-cell;\r\n");
      out.write("      		vertical-align: middle;\r\n");
      out.write("      		float: right;\r\n");
      out.write("      		cursor: pointer;\r\n");
      out.write("		}\r\n");
      out.write("	</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../template.jsp", out, false);
      out.write("\r\n");
      out.write("	<div class=\"container\">\r\n");
      out.write("		<div class=\"wrap\">\r\n");
      out.write("			<table>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\"><h1 style=\"color: #ff7f00;\">※ ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" ※</h1>\r\n");
      out.write("					<!-- <td></td> -->\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td><div style=\"margin: 10px 0 20px 0;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.writer }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" | <span id=\"registerdate\"></span> |\r\n");
      out.write("					 조회 ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.readcount }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" | 좋아요 \r\n");
      out.write("					 <img src=\"../resources/images/missing/dislike.png\" id=\"like\" /> ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.likecount }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" </div>\r\n");
      out.write("					 <div id=\"foundBtn\" onclick=\"chageToFound();\">찾았어요!</div></td></td>\r\n");
      out.write("					<!-- <td></td> -->\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr class=\"img_tr\">\r\n");
      out.write("					<td colspan=\"2\"><div class=\"img_container\"></div></td>\r\n");
      out.write("					<!-- <td></td> -->\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\"><h3>실종 동물 정보</h3></td>\r\n");
      out.write("					<!-- <td></td> -->\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td colspan=\"2\">\r\n");
      out.write("						<table class=\"table table-hover\">\r\n");
      out.write("							<tbody>\r\n");
      out.write("								<tr class=\"add_border\">\r\n");
      out.write("									<td class=\"info_index\">이름</td>\r\n");
      out.write("									<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"info_index\">종</td>\r\n");
      out.write("									<td><span id=\"animal_breed\"></span> / ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.breed }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"info_index\">성별</td>\r\n");
      out.write("									<td><span id=\"gender\"></span></td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td class=\"info_index\">실종일자</td>\r\n");
      out.write("									<td><span id=\"missingdate\"></span></td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td>실종장소</td>\r\n");
      out.write("									<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.location }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" \r\n");
      out.write("									");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("									</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("								<tr>\r\n");
      out.write("									<td>특이사항</td>\r\n");
      out.write("									<td>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.contents }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</td>\r\n");
      out.write("								</tr>\r\n");
      out.write("							</tbody>\r\n");
      out.write("						</table>\r\n");
      out.write("					</td>\r\n");
      out.write("					<!-- <td></td> -->\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("			<button type=\"button\" class=\"btn btn-danger\" onclick=\"location.href='/missing/list'\">목록</button>\r\n");
      out.write("			<button type=\"button\" class=\"btn btn-danger\" onclick=\"showReply();\">댓글달기</button>\r\n");
      out.write("			<button type=\"button\" class=\"btn btn-danger\" onclick=\"location.href='/missing/modify?no=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.no}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\">수정</button>\r\n");
      out.write("			<button type=\"button\" class=\"btn btn-danger\" onclick=\"deleteBoard();\">삭제</button>\r\n");
      out.write("			\r\n");
      out.write("			<div id=\"replyDiv\" style=\"clear: both;\">\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<div class=\"checkbox\">\r\n");
      out.write("	  					<label><input type=\"checkbox\" value=\"\" id=\"isSecret\">비밀글로 등록</label>\r\n");
      out.write("					</div>\r\n");
      out.write("	            	<label for=\"replyContents\">댓글 내용: </label>\r\n");
      out.write("	            	<div><textarea rows=\"6\"  id=\"replyContents\"></textarea></div>\r\n");
      out.write("	         	</div>\r\n");
      out.write("	         	<button type=\"button\" class=\"btn btn-danger\" onclick=\"addReply();\">댓글등록</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<div id=\"replyLst\"></div>\r\n");
      out.write("			\r\n");
      out.write("			<div id=\"replyModify\" style=\"display: none;\">\r\n");
      out.write("				<div>댓글 수정</div>\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					<div class=\"checkbox\">\r\n");
      out.write("	  					<label><input type=\"checkbox\" value=\"\" id=\"isSecretModify\">비밀글로 등록</label>\r\n");
      out.write("					</div>\r\n");
      out.write("	            	<label for=\"replyContents\">댓글 내용:</label>\r\n");
      out.write("	            	<textarea rows=\"6\" id=\"replyContentsModify\"></textarea>\r\n");
      out.write("	         	</div>\r\n");
      out.write("	         	<button type=\"button\" class=\"btn btn-danger\" onclick=\"modifyReply();\">댓글수정</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<div id=\"replyRemove\" style=\"display: none;\">\r\n");
      out.write("				<div>댓글 삭제</div>\r\n");
      out.write("				<div class=\"form-group\">\r\n");
      out.write("					정말로 진심으로 진짜로 삭제할까요? (삭제된 댓글은 복구가 불가능 합니다!)\r\n");
      out.write("				<button type=\"button\" class=\"btn btn-info\" onclick=\"closeRemove();\">취소</button>\r\n");
      out.write("				<button type=\"button\" class=\"btn btn-warning\" onclick=\"removeReply();\">댓글 삭제</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/missing/viewBoard.jsp(221,9) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.dlocation != null }", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("										");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${MissingBoard.dlocation }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\r\n");
          out.write("									");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
